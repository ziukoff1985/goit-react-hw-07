import { createSlice } from '@reduxjs/toolkit'; // Імпорт функції 'createSlice' з бібліотеки @reduxjs/toolkit для створення slice

// Створюємо slice для фільтру пошуку контактів
const filtersSlice = createSlice({
  name: 'filters', // Назва slice, яка визначає його частину стану
  initialState: {
    name: '', // Початковий стан фільтра - порожнє рядок для пошуку за ім'ям
  },
  reducers: {
    // Редюсер для зміни фільтра (пошук за ім'ям)
    // Використовується в компоненті 'SearchBox'
    changeFilter: (state, action) => {
      state.name = action.payload; // Оновлюємо значення властивості 'name' в стані (на основі action.payload)
    },
  },
});

// Експортуємо action 'changeFilter' для використання в компонентах
export const { changeFilter } = filtersSlice.actions;

// Експортуємо редюсер для додавання його до Redux store
export const filtersReducer = filtersSlice.reducer;

// ======================================================== //

// *** Логіка ***

// »»»'createSlice':
// - Це функція з @reduxjs/toolkit, яка допомагає створювати slice в Redux. Slice об'єднує логіку редюсерів, дій та початкового стану в один об'єкт.
// - В даному випадку ми створюємо slice для фільтрів пошуку, зокрема для фільтрації контактів за ім'ям.

// »»»'name':
// - Назва slice вказує на частину стану, яку цей slice буде керувати. В цьому випадку, частина стану, яка відповідає за фільтри, має назву "filters".

// »»»'initialState':
// - Визначає початковий стан цього slice. В нашому випадку, початковий стан для фільтра — порожній рядок (""), оскільки немає значення для пошуку при початковому завантаженні.

// »»»'reducers':
// - Визначає функції, які змінюють стан. У нас є один редюсер:
// - changeFilter: Змінює значення фільтра на основі значення з action.payload (тобто значення, яке буде передано при виклику цієї дії).

// »»»'changeFilter':
// - Це автоматично згенерована дія, яку можна використовувати для зміни стану фільтра (наприклад, для оновлення значення пошукового фільтра).

// »»»'filtersReducer':
// - Експортуємо редюсер, щоб додати його в загальний store Redux і забезпечити оновлення стану фільтрів.
